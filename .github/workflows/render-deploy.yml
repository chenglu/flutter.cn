name: Deploy to Render.com

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main
    types: [opened, synchronize, reopened]
  workflow_dispatch: # 允许手动触发

# Declare default permissions as read only.
permissions: 
  contents: read
  issues: write
  pull-requests: write

env:
  NODE_VERSION: 22

jobs:
  # 验证构建（PR 和 push 都会运行）
  validate-build:
    name: Validate Render.com build
    runs-on: ubuntu-latest
    if: github.repository == 'chenglu/flutter.cn'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Enable Corepack
        run: npm i -g corepack@latest && corepack enable
      
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Setup pnpm
        run: corepack install
      
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: beta
      
      - name: Test build script
        run: |
          bash tool/build-render.sh
          echo "✅ Build script executed successfully"
      
      - name: Verify build output
        run: |
          if [ ! -d "_site" ]; then
            echo "❌ Error: _site directory not found"
            exit 1
          fi
          if [ ! -f "_site/index.html" ]; then
            echo "❌ Error: index.html not found"
            exit 1
          fi
          if [ ! -f "_site/_redirects" ]; then
            echo "⚠️  Warning: _redirects file not found"
          fi
          if [ ! -f "_site/_headers" ]; then
            echo "⚠️  Warning: _headers file not found"
          fi
          echo "✅ Build output verified"
      
      - name: Check build size
        run: |
          SIZE=$(du -sh _site | cut -f1)
          echo "📦 Build size: $SIZE"
          echo "build-size=$SIZE" >> $GITHUB_OUTPUT
      
      - name: Upload build artifacts (for debugging)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-debug
          path: |
            _site
            *.log
          retention-days: 7
      
      # 成功构建后上传构建产物（仅用于调试）
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: _site
          retention-days: 1

  # 部署通知（仅在 main 分支 push 时运行）
  deploy-notification:
    name: Render.com deployment status
    needs: validate-build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main' &&
      github.repository == 'chenglu/flutter.cn'
    steps:
      - name: Notify deployment
        run: |
          echo "🚀 构建验证成功！"
          echo "📡 Render.com 已通过 GitHub 集成自动触发部署"
          echo "� 主站: https://flutter-cn-docs.onrender.com"
          echo "� 查看部署状态: https://dashboard.render.com"

  # PR 预览信息（仅在 PR 时运行）
  pr-preview-info:
    name: PR preview information
    needs: validate-build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_target' &&
      github.repository == 'chenglu/flutter.cn'
    steps:
      - name: PR preview info
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.issue.number;
            // 获取 PR 文件列表
            const files = await github.paginate(
              github.rest.pulls.listFiles,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                per_page: 100
              }
            );
            // 过滤出 .md 文件
            const mdFiles = files
              .map(f => f.filename)
              .filter(name => name.endsWith('.md'));

            let fileList = '';
            if (mdFiles.length > 0) {
              fileList = mdFiles.map(md => {
                const html = md.replace(/\.md$/, '.html');
                return `- [\`${md}\`](https://flutter-cn-docs-pr-${prNumber}.onrender.com/${html})`;
              }).join('\n');
            } else {
              fileList = '> 本次 PR 未修改任何 Markdown 文档。';
            }

            const message = `## 🎨 Render.com PR 文档预览
            
            ✅ 构建验证已通过！
            
            ### 🔗 PR 预览链接：
            https://flutter-cn-docs-pr-${prNumber}.onrender.com
            
            ### 📝 本次 PR 修改的 Markdown 文档：
            ${fileList}
            
            ---
            
            💡 **预览说明：**
            - Render.com 会通过 GitHub 集成自动检测并部署 PR 预览
            - 预览链接通常在几分钟内生效（首次可能需要更长时间）
            - 每次推送新 commit 都会自动触发重新部署
            - 如果预览链接暂时无法访问，请等待 Render.com 完成部署
            
            🚀 预览将自动部署完成！`;

            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
